version: '3.7'

services:
  # Zookeeper para Kafka
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - debezium_network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Conexi贸n a Zookeeper
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INTERNAL: INTERNAL
      KAFKA_LISTENER_INTERNAL: INSIDE://kafka:9093
      KAFKA_LISTENER_PORT: 9092
      KAFKA_ADVERTISED_LISTENER_PORT: 9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - debezium_network
    command: >
      bash -c "
        /etc/confluent/docker/run & 
        sleep 10 && 
        kafka-topics --create --if-not-exists --topic dbserver1.public.Auto --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        tail -f /dev/null"

  # PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: auto_db
    ports:
      - "5432:5432"
    networks:
      - debezium_network
    command: postgres -c wal_level=logical -c max_replication_slots=4 -c max_wal_senders=4 -c listen_addresses='*'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgresql:/docker-entrypoint-initdb.d  # Montar los scripts de inicializaci贸n si tienes alguno

  # MariaDB
  mariadb:
    image: mariadb:10.5
    container_name: mariadb-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: auto_db
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: 12345
    ports:
      - "3307:3306"
    networks:
      - debezium_network
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./init-scripts/mariadb:/docker-entrypoint-initdb.d  # Montar los scripts de inicializaci贸n si tienes alguno
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW --binlog-do-db=auto_db

  # Conector de Debezium para PostgreSQL
  debezium-postgres-connector:
    image: debezium/connect:2.0
    restart: always
    container_name: debezium-postgres-connector
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=dbz-configs
      - OFFSET_STORAGE_TOPIC=dbz-offsets
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - postgres
      - mariadb
    volumes:
      - ./debezium-connector:/debezium-connector
    networks:
      - debezium_network

  # Aplicaci贸n Spring Boot
  spring-app:
    build: .
    container_name: spring-boot-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mariadb-db:3306/auto_db
      SPRING_DATASOURCE_USERNAME: dbuser
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./logs:/logs  # Monta el directorio de logs del host en el contenedor
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
      - mariadb
    networks:
      - debezium_network

volumes:
  postgres_data:  # Definimos el volumen para PostgreSQL
    driver: local
  mariadb_data:  # Definimos el volumen para MariaDB
    driver: local

networks:
  debezium_network:
    driver: bridge