version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  # Microservicio Producer 
  micro_producer:
    build:
      context: ./micro_producer
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - kafka

  # Servicio GraphQL
  graphql_service:
    build:
      context: ./graphql_project
      dockerfile: Dockerfile
    container_name: graphql_service
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  # API Gateway con Kong
  kong:
    image: kong:latest
    container_name: kong
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./auth0_app_kong/gateway/kong.yml:/etc/kong/kong.yml
    depends_on:
      - graphql_service
    networks:
      - kong-network

networks:
  kong-network:
    driver: bridge
